/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Tier2Role;

import Business.EcoSystem;
import Business.Departments.Departments;
import Business.Departments.Tier2Department;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.SessionWorkRequest;
import Business.WorkQueue.Tier2WorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jyoti
 */
public class Tier2WorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form Tier2WorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private Tier2Department tier2Organization;

    public Tier2WorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Departments tier2Organization, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        this.tier2Organization = (Tier2Department) tier2Organization;

        populateTable();
        populateSessionTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        btnProcess = new javax.swing.JButton();
        assignJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        SessionJTable = new javax.swing.JTable();
        btnViewLog = new javax.swing.JButton();

        setBackground(new java.awt.Color(220, 226, 235));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));

        workRequestJTable.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sender", "Receiver", "Status", "Progress Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        btnProcess.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnProcess.setText("Process");
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });

        assignJButton.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        assignJButton.setText("Assign to me");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel2.setText("Session Table ");

        SessionJTable.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        SessionJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User ID", "User Name", "Last Login Duration"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(SessionJTable);

        btnViewLog.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnViewLog.setText("View Log");
        btnViewLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewLogActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(137, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(assignJButton)
                        .addGap(212, 212, 212)
                        .addComponent(btnViewLog)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnProcess))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap(142, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(assignJButton)
                            .addComponent(btnProcess))
                        .addGap(37, 37, 37))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnViewLog)
                        .addGap(23, 23, 23)))
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();

        model.setRowCount(0);

        for (WorkRequest request : tier2Organization.getWorkQueue().getWorkRequestList()) {
            if (request instanceof Tier2WorkRequest) {
                Tier2WorkRequest tier2 = (Tier2WorkRequest) request;
                Object[] row = new Object[4];
                row[0] = tier2.getSender();
                row[1] = tier2.getReceiver() == null ? null : request.getReceiver().getPerson().getPersonID();
                row[2] = tier2.getStatus();
                row[3] = tier2.getWorkProgress();

                model.addRow(row);
            }
        }
    }

    public void populateSessionTable() {
        DefaultTableModel model = (DefaultTableModel) SessionJTable.getModel();

        model.setRowCount(0);

        for (WorkRequest request : tier2Organization.getWorkQueue().getWorkRequestList()) {
            if (request instanceof SessionWorkRequest) {
                SessionWorkRequest session = (SessionWorkRequest) request;
                Object[] row = new Object[3];
                row[0] = session.getUser().getPerson().getPersonID();
                row[1] = session.getUser().getUsername();
                row[2] = session.getLastUserLogin();
                //row[3] = tier2.getWorkProgress();

                model.addRow(row);
            }
        }
    }

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed
        // TODO add your handling code here:
        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0) {
            return;
        }
        Tier2WorkRequest request = (Tier2WorkRequest) tier2Organization.getWorkQueue().getWorkRequestList().get(selectedRow);

        request.setWorkProgress("Processing");

        Tier2ProcessArea tier2ProcessArea = new Tier2ProcessArea(userProcessContainer, userAccount, request);
        userProcessContainer.add("Tier2ProcessArea", tier2ProcessArea);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnProcessActionPerformed

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0) {
            return;
        }

        Tier2WorkRequest request = (Tier2WorkRequest) tier2Organization.getWorkQueue().getWorkRequestList().get(selectedRow);

        if ((request.getReceiver()) == null) {
            request.setReceiver(userAccount);
            request.setWorkProgress("Pending");
            populateTable();
        } else {
            JOptionPane.showMessageDialog(null, "The receiver is already set.");
        }
    }//GEN-LAST:event_assignJButtonActionPerformed

    private void btnViewLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewLogActionPerformed
        // TODO add your handling code here:
        ViewLogFile viewLogFile = new ViewLogFile(userProcessContainer);
        userProcessContainer.add("ViewLogFile", viewLogFile);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnViewLogActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable SessionJTable;
    private javax.swing.JButton assignJButton;
    private javax.swing.JButton btnProcess;
    private javax.swing.JButton btnViewLog;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
